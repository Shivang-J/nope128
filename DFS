#include <iostream>
#include <vector>
using namespace std;

void dfs(int node, vector<bool> &visited, const vector<vector<int>> &adjList) {
    visited[node] = true;
    cout << node << " ";

    for (int neighbor : adjList[node]) {
        if (!visited[neighbor]) {
            dfs(neighbor, visited, adjList);
        }
    }
}

int main() {
    int numNodes, numEdges;

    cout << "Enter the number of nodes: ";
    cin >> numNodes;

    cout << "Enter the number of edges: ";
    cin >> numEdges;

    vector<vector<int>> adjList(numNodes);

    cout << "Enter the edges (format: node1 node2):" << endl;
    for (int i = 0; i < numEdges; i++) {
        int u, v;
        cin >> u >> v;
        adjList[u].push_back(v);
        adjList[v].push_back(u);
    }

    vector<bool> visited(numNodes, false);

    cout << "DFS Traversal starting from node 0: ";
    dfs(0, visited, adjList);
    cout << endl;

    return 0;
}
